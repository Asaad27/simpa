%%%%%%%%%% Generated by KIT %%%%%%%%%%

specification SYSTEM_SAMLSSO_SP
channel_model CCM

entity SamlSSO_SP(Actor : agent, Other : agent){
  symbols
    Action : text;
    Content : text;
    GenSessionID : text;
    IdP : text;
    Msg : text;
    SAMLRequest : text;
    SAMLResponse : text;
    SessionID : text;
    State : nat;
    Status : text;
    URL1 : text;
    URL2 : text;
  body {
    State := 0;
    while (true){
      select {
        on(State = 0): {
          select {
            on(Other -> Actor: httpReq1(?URL1)): {
              if ((URL1 = "http://go.od/")){
                Action := "redirect";
                GenSessionID := fresh();
                IdP := "IdP";
                SAMLRequest := "SamlReq";
                Actor -> Other: httpResp1(Action, IdP, SAMLRequest, GenSessionID);
              }
              if ((URL1 = "http://err.or/")){
                Msg := "url_invalid";
                Actor -> Other: err(Msg);
              }
            }
          }
        }
        on(State = 1): {
          select {
            on(Other -> Actor: httpReq2(?URL2, ?SAMLResponse, ?SessionID)): {
              if ((URL2 = "http://err.or/") | (URL2 = "http://go.od/") & (SessionID != GenSessionID)){
                if ((URL2 = "http://err.or/") & (SessionID = GenSessionID)){
                  Msg := "url_invalid";
                }
                if ((URL2 = "http://err.or/") & (SessionID != GenSessionID)){
                  Msg := "url_and_id_invalid";
                }
                if ((URL2 = "http://go.od/")){
                  Msg := "id_invalid";
                }
                Actor -> Other: err(Msg);
              }
              if ((URL2 = "http://go.od/") & (SessionID = GenSessionID)){
                Content := "ressource";
                Status := "ok";
                Actor -> Other: httpResp2(Status, Content);
              }
            }
          }
        }
      }
    }
  }
}
